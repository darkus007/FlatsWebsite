-- Создание таблиц через данный файл
-- с целью создать представление CREATE VIEW all_flats_last_price
-- на основе данных таблиц.
-- (python manage.py sqlmigrate flats 0001_initial)
--
BEGIN;
--
-- Create model Flats
--
CREATE TABLE "flats" (
    "flat_id" integer NOT NULL PRIMARY KEY,
    "address" varchar(255) NOT NULL,
    "floor" integer NULL,
    "rooms" integer NULL,
    "area" double precision NULL,
    "finishing" boolean NULL,
    "bulk" varchar(127) NOT NULL,
    "settlement_date" date NULL,
    "url_suffix" varchar(127) NOT NULL,
    "data_created" date NOT NULL,
    "data_closed" date NULL
);
--
-- Create model Projects
--
CREATE TABLE "projects" (
    "project_id" integer NOT NULL PRIMARY KEY,
    "city" varchar(127) NOT NULL,
    "name" varchar(127) NOT NULL,
    "url" varchar(255) NOT NULL,
    "metro" varchar(127) NOT NULL,
    "time_to_metro" integer NULL,
    "latitude" double precision NULL,
    "longitude" double precision NULL,
    "address" varchar(255) NOT NULL,
    "data_created" date NOT NULL,
    "data_closed" date NULL
);
--
-- Create model Prices
--
CREATE TABLE "prices" (
    "id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "benefit_name" varchar(127) NULL,
    "benefit_description" varchar(255) NULL,
    "price" integer NOT NULL,
    "meter_price" integer NULL,
    "booking_status" varchar(15) NOT NULL,
    "data_created" date NOT NULL,
    "flat_id" integer NOT NULL
);
--
-- Add field project to flats
--
ALTER TABLE "flats" ADD COLUMN "project_id" integer NOT NULL CONSTRAINT "flats_project_id_f85ee43d_fk_projects_project_id" REFERENCES "projects"("project_id") DEFERRABLE INITIALLY DEFERRED;
    SET CONSTRAINTS "flats_project_id_f85ee43d_fk_projects_project_id" IMMEDIATE;
ALTER TABLE "prices" ADD CONSTRAINT "prices_flat_id_4e8b52ff_fk_flats_flat_id" FOREIGN KEY ("flat_id") REFERENCES "flats" ("flat_id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "prices_flat_id_4e8b52ff" ON "prices" ("flat_id");
CREATE INDEX "flats_project_id_f85ee43d" ON "flats" ("project_id");
COMMIT;
--
-- Create VIEW all_flats_last_price
--
CREATE VIEW all_flats_last_price AS
    SELECT flats.flat_id, flats.address, flats.floor, flats.rooms, flats.area, flats.finishing, flats.settlement_date, flats.url_suffix,
        projects.project_id, projects.name, projects.city, projects.url,
        prices.price, prices.booking_status
    FROM flats
    INNER JOIN projects ON flats.project_id = projects.project_id
    INNER JOIN prices ON prices.flat_id = flats.flat_id
    INNER JOIN (
        SELECT flat_id, max(data_created) AS max_data
        FROM prices
        GROUP BY flat_id
    ) AS last_price ON last_price.flat_id = prices.flat_id
    WHERE prices.data_created = last_price.max_data;
